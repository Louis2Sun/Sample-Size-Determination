library(SSD)
library(parallel)

fun <- function(x){
  return(calculate_AUC_base(seed=x))
}

# system.time({
#   res <- lapply(1:20, fun);
# });

clnum <- detectCores()-1

cl <- makeCluster(getOption("cl.cores", clnum));

clusterEvalQ(cl, c(library(SSD)))
clusterExport(cl, c("calculate_AUC_base"),
              envir=environment())

seeds = c(123,5,3)

system.time({
  res <- parLapply(cl, seeds,  fun)
});

file = paste0("./auc_res.Rdata")
save(res,file=file)

load("./auc_res.Rdata")

calculate_std_of_AUC_and_draw_plot(res)

n_train_sets = c(15,30,60,120,150)
# model=c("svm","randomforest")
model=c("svm","randomforest","logistic","lda","tree")
library(SSD)
load("D:/Dropbox/USC/RA/2020summer/R Package/Sample-Size-Determination/auc_res.Rdata")
calculate_std_of_AUC_and_draw_plot(res,n_train_sets=n_train_sets, model=model)
